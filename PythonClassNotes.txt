Python Learning:

Note : Check versions supported for numpy & scipy
import pip
print(pip.pep425tags.get_supported())

then Download from http://www.lfd.uci.edu/~gohlke/pythonlibs/#scipy

Statistics terms used for machine learning :
regression kmeans clustring covariance correlation mean median modeling



if while installing getting an ssl error:
pip install --index-url=http://pypi.python.org/simple/ --trusted-host pypi.python.org  pythonPackage


	1) use numpy
	
	import numpy
	l1 = []
	l2 = []
	
	listsum = l1+l2
	

deepcopy
--------------
arr2=arr1.copy() -> this will create a seperate copy of arr1 with the name of arr2. if we make changes in arr2, it will not be in arr1

shallow copy
-----------------
arr3=arr1.view() -> this will create a link with the name arr3. so if we make changes in arr3, it will change arr1 as well


http://matplotlib.org/


graphs :

1)  >>> import pylab
	>>> from pylab import *
	>>> x = arange(50)*2*pi/50
	>>> plot(x,sin(x),'y=^')
	Traceback (most recent call last):
	  File "<pyshell#4>", line 1, in <module>
		plot(x,sin(x),'y=^')
	  File "C:\Python27\lib\site-packages\matplotlib\pyplot.py", line 3318, in plot
		ret = ax.plot(*args, **kwargs)
	  File "C:\Python27\lib\site-packages\matplotlib\__init__.py", line 1892, in inner
		return func(ax, *args, **kwargs)
	  File "C:\Python27\lib\site-packages\matplotlib\axes\_axes.py", line 1406, in plot
		for line in self._get_lines(*args, **kwargs):
	  File "C:\Python27\lib\site-packages\matplotlib\axes\_base.py", line 407, in _grab_next_args
		for seg in self._plot_args(remaining, kwargs):
	  File "C:\Python27\lib\site-packages\matplotlib\axes\_base.py", line 357, in _plot_args
		linestyle, marker, color = _process_plot_format(tup[-1])
	  File "C:\Python27\lib\site-packages\matplotlib\axes\_base.py", line 130, in _process_plot_format
		'Unrecognized character %c in format string' % c)
	ValueError: Unrecognized character = in format string
	>>> plot(x,sin(x),'y-^')
	[<matplotlib.lines.Line2D object at 0x05452910>]
	>>> xlabel('This is my x-axis')
	<matplotlib.text.Text object at 0x051D3990>
	>>> show()

2)	>>> y = sin(x)
	>>> plot(y)
	[<matplotlib.lines.Line2D object at 0x0577A4F0>]
	>>> show()
	
3)  >>> scatter(x,y)
	<matplotlib.collections.PathCollection object at 0x05823D70>
	>>> show()
	
4)	>>> x1= rand(200)
	>>> y1= rand(200)
	>>> size = rand(300)*50
	>>> color = rand(200)
	>>> scatter(x1,y1,size,color)
	<matplotlib.collections.PathCollection object at 0x069DF5F0>
	>>> colorbar()
	<matplotlib.colorbar.Colorbar object at 0x06A8C7F0>
	>>> show()
	
5)	>>> bar(x,sin(x),width=x[1]-x[0])
	<Container object of 50 artists>
	>>> show()
	
6)	>>> hist(randn(2000))
	(array([  17.,   37.,  198.,  365.,  490.,  460.,  271.,  119.,   37.,    6.]), array([-3.05810961, -2.42315437, -1.78819913, -1.15324389, -0.51828866,
        0.11666658,  0.75162182,  1.38657706,  2.0215323 ,  2.65648754,
        3.29144277]), <a list of 10 Patch objects>)
	>>> show()
	

Pandas:
	series:
		Flat 1-D data
		
		ds = pandas.Series([10,20,30],index=[100,200,300])
		>>> ds
		100    10
		200    20
		300    30
		dtype: int64
		>>> ds1 = pandas.Series([10,20,30],index=['a','b','c'])
		>>> ds1
		a    10
		b    20
		c    30
		dtype: int64
		>>> ds['100']

		Traceback (most recent call last):
		  File "<pyshell#39>", line 1, in <module>
			ds['100']
		  File "C:\Python27\lib\site-packages\pandas\core\series.py", line 603, in __getitem__
			result = self.index.get_value(self, key)
		  File "C:\Python27\lib\site-packages\pandas\indexes\base.py", line 2169, in get_value
			tz=getattr(series.dtype, 'tz', None))
		  File "pandas\index.pyx", line 98, in pandas.index.IndexEngine.get_value (pandas\index.c:3557)
		  File "pandas\index.pyx", line 106, in pandas.index.IndexEngine.get_value (pandas\index.c:3240)
		  File "pandas\index.pyx", line 156, in pandas.index.IndexEngine.get_loc (pandas\index.c:4363)
		KeyError: '100'
		>>> ds[100]
		10
		>>> ds1['a']
		10
		
		if Now we do reindex:
		ds.reindex(range(150)) // fills NaN
		ds.reindex(range(150),fill_value='Python')
		ds.reindex(range(150),method='ffill') // substitutes NaN with value just above it.
	frames:
		2-D data
		
		df = {'Name':['Abhishek','Avinash','Anjana'],
			  'Age':[24,29,32],
			  'Gender': ['M','M','F']}
		>>> df
		{'Gender': ['M', 'M', 'F'], 'Age': [24, 29, 32], 'Name': ['Abhishek', 'Avinash', 'Anjana']}
		>>> df_pandas = pandas.DataFrame(df)
		>>> df_pandas
		   Age Gender      Name
		0   24      M  Abhishek
		1   29      M   Avinash
		2   32      F    Anjana
		
		Commands in Frame:
		df.describe()
		df.count()
		df.head()
		df.tail()

Reading Data From Files:
http://pandas.pydata.org/pandas-docs/version/0.15.2/tutorials.html

1) CSV File:
	https://chrisalbon.com/python/pandas_dataframe_importing_csv.html
	pandas.read_csv(<fileLocation>)
		
		
Check version of python module.
import <python-module>
print(<python-module>.__version__)
	eg.
	>>>import selenium
	>>>print(selenium.__version__)
	3.4.3